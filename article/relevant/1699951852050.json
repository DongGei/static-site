{"relevantArticles":[{"articleTitle":"java多线程","articleAbstractText":"JavaThread 概述 Thread，英文单词，名词、动词，作名词时意思是\u201c线；螺纹；思路；衣服；线状物；玻璃纤维；路线\u201d，java多线程。 进程是系统运行程序的基本单位，线程是比进程更小、更轻量级的执行单位，每个进程都拥有自己的一块内存空间和变量资源等，然而同一个进程下的多个线程则共享数据和资源，所以不管线程的创建和销毁工作，还是在线程之间切换工作，都要比进程更加轻量级、消耗系统资源更少。 多线程在多个cpu的机器上可以实现。如果只是单cpu，只是让我们看起来是多线程的。实际上运行的是靠cup的调度。而不是同时去执行的。 在jvm中 每一个线程都有自己的java虚拟机栈，本地方法栈，程序计数器。而对应的所有线程共享堆内存和元空间（以前版本也叫方法区）。与上一段文字进程和线程的关系对应。 创建多线程 声明一个Thread类的子类，子类中重写Thread类的run方法。Thread也实现了runnable接口 声明一个实现Runnable接口的类，类中实现run方法。 声明一个实现Callable接口的类（在初级阶段不需要太了解） 推荐使用runnable接口 **我认为最主要的原因....","articleStatus":0,"articlePermalink":"/articles/2023/11/14/1699951927724.html","articleImg1URL":"https://b3logfile.com/file/2023/11/solo-fetchupload-4795024217609908277-atSRtLT.png?imageView2/2/w/1280/format/jpg/interlace/1/q/100"},{"articleTitle":"HashMap相关的一系列问题","articleAbstractText":"HashMap相关的一系列问题","articleStatus":0,"articlePermalink":"/articles/2023/11/14/1699951902323.html","articleImg1URL":"https://b3logfile.com/bing/20230818.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"},{"articleTitle":"java 函数式编程","articleAbstractText":"java 函数式编程 1.为什么学 容于并发编程。可以使用并发 处理大数量集合，自动使用多线程去处理，而自己不用写线程有关代码。 可以简化代码，解决嵌套。 2.Lambda表达式 Lambda是JDK8中一个语法糖。他可以对某些匿名内部类的写法进行简化。它是函数式编程思想的一个重要体现。让我们不用关注是什么对象。而是更关注我们对数据进行了什么操作。 (参数列表)-&gt;{代码} 小括号 和 大括号 都还可以省略  语法糖： 简单的说，语法糖就是一种便捷写法。就相当于汉语里的成语。 tip: ctrl+p 查看传参提示 public class LambdaDemo_01 { public static void main(String[] args) { new Thread(new Runnable() { public void run() { System.out.println(\"_____新线程中run方法____\"); } }).start(); } }  上面这个Thread构造需要一个实现了Runnable接口的对象 我们使用了匿名内部类，并且重写了run方法，然后调....","articleStatus":0,"articlePermalink":"/articles/2023/11/14/1699946312113.html","articleImg1URL":"https://b3logfile.com/bing/20230311.jpg?imageView2/1/w/960/h/540/interlace/1/q/100"}]}